<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.igo.dao.BillDao">
    <resultMap id="bill" type="Bill">
        <id property="bid" column="bid" javaType="int"/>
        <result property="goodsId" column="gid" javaType="String"/>
        <result property="totalPrice" column="allprince" javaType="Double"/>
        <result property="customId" column="custom_id" javaType="String"/>
        <result property="businessId" column="business_id" javaType="String"/>
        <result property="createTime" column="create_time" javaType="java.util.Date"/>
        <result property="status" column="status" javaType="String"/>
        <!--通过association声明关联的对象-->
        <association property="goods" column="goodsId" javaType="Goods">
            <!--column的值为字段名，要求不可以重复，所以值一般为SQL语句中自己起的字段名-->
            <result property="goodsName" column="gdn" javaType="String"/>
            <result property="goodsType" column="gdt" javaType="String"/>
            <result property="goodsPrice" column="gdp" javaType="Double"/>
            <result property="goodsPhoto" column="gdg" javaType="String"/>
        </association>
        <association property="custom" column="customId" javaType="User">
            <!--column的值为字段名，要求不可以重复，所以值一般为SQL语句中自己起的字段名-->
            <result property="userName" column="dname" javaType="String"/>
            <result property="phone" column="dphoto" javaType="String"/>
        </association>
        <association property="business" column="businessId" javaType="User">
            <result property="userName" column="cname" javaType="String"/>
            <result property="phone" column="cphoto" javaType="String"/>
        </association>
    </resultMap>
    <!--由于报销单编号是让MySQL数据库自己去生成的，所以插入时，不插该字段-->
    <!--useGeneratedKeys是用来打开自动生成主键的，keyProperty用来指定生成的逐渐放到那个属性里面 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="bid" parameterType="Bill">
        insert into bill(gid, allprince, custom_id, business_id, create_time, status)
        values(#{goodsId},#{totalPrice},#{customId},#{businessId},#{createTime},#{status})
    </insert>
    <update id="update" parameterType="Bill">
        update bill set status=#{status} where bid=#{bid}
    </update>
    <delete id="delete" parameterType="int">
        delete from bill where bid=#{bid}
    </delete>
    <select id="select" resultMap="bill" parameterType="int">
        select cv.*,ce.uname cname,ce.phone cphoto,d.uname dname,d.phone dphoto,gd.gname gdn,gd.type gdt,gd.price gdp,gd.goodsphoto gdg
        from bill cv
        left join goods gd on gd.gid=cv.gid
        left join user d on d.uid = cv.custom_id
        left join user ce on ce.uid=cv.business_id
        where cv.bid=#{bid}
    </select>
    <select id="selectByCustomId" resultMap="bill" parameterType="String">
        select cv.*,ce.uname cname,ce.phone cphoto,d.uname dname,d.phone dphoto,gd.gname gdn,gd.type gdt,gd.price gdp,gd.goodsphoto gdg
        from bill cv
        left join goods gd on gd.gid=cv.gid
        left join user d on d.uid = cv.custom_id
        left join user ce on ce.uid=cv.business_id
        where cv.custom_id=#{customId} order by cv.status,cv.create_time desc
    </select>
    <select id="selectByBusinessId" resultMap="bill" parameterType="String">
        select cv.*,ce.uname cname,ce.phone cphoto,d.uname dname,d.phone dphoto,gd.gname gdn,gd.type gdt,gd.price gdp,gd.goodsphoto gdg
        from bill cv
        left join goods gd on gd.gid=cv.gid
        left join user d on d.uid = cv.custom_id
        left join user ce on ce.uid=cv.business_id
        where cv.business_id=#{customId} and cv.status in('待发货','已发货','已签收')
        order by cv.status,cv.create_time desc
    </select>
</mapper>